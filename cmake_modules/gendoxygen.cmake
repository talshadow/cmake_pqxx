macro(configure_doxygen_file doxygen_config_file file_name_suffix)
 if(EXISTS ${${PROJECT_NAME}_SOURCE_DIR}/${doxygen_config_file})
    file(REMOVE ${CMAKE_CURRENT_BINARY_DIR}/doxy-${file_name_suffix}.conf)
    file(READ ${${PROJECT_NAME}_SOURCE_DIR}/${doxygen_config_file} DOXYFILE_CONTENTS)
     string(REGEX REPLACE ";" "\\\\;" DOXYFILE_CONTENTS "${DOXYFILE_CONTENTS}")
     string(REGEX REPLACE "\n" ";" DOXYFILE_LINES "${DOXYFILE_CONTENTS}")
     list(LENGTH DOXYFILE_LINES ROW)
     math(EXPR ROW "${ROW} - 1")
     foreach(I RANGE ${ROW})
        list(GET DOXYFILE_LINES ${I} LINE)
        if(LINE STRGREATER "")
         string(REGEX MATCH "^[a-zA-Z]([^ ])+" DOXY_PARAM ${LINE})
         if(DEFINED DOXY_${DOXY_PARAM})
            string(REGEX REPLACE "=([^\n])+" "= ${DOXY_${DOXY_PARAM}}" LINE ${LINE})
         endif(DEFINED DOXY_${DOXY_PARAM})
        endif()
        file(APPEND ${CMAKE_CURRENT_BINARY_DIR}/doxy-${file_name_suffix}.conf "${LINE}\n")
     endforeach()
 else()
    message(SEND_ERROR "Doxygen configuration file '${doxygen_config_file}' not found. Documentation will not be generated")
 endif()
endmacro(configure_doxygen_file)

macro(ADD_DOCUMENTATION TARGET doxygen_config_file)
 find_package(Doxygen)
 if(DOXYGEN_FOUND)
    configure_doxygen_file(${doxygen_config_file} ${TARGET})
    add_custom_target(${TARGET} COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/doxy-${TARGET}.conf)
 else(DOXYGEN_FOUND)
    message(STATUS "Doxygen not found. Documentation will not be generated")
 endif(DOXYGEN_FOUND)
endmacro(ADD_DOCUMENTATION)