find_path(LIBPQFE libpq-fe.h REQUIRED)
if(WIN32)
  find_library(HAVE_LIBPQ libpq REQUIRED)
else(WIN32)
  find_library(HAVE_LIBPQ pq REQUIRED)
  if(NOT LIBPQFE)
    find_path(LIBPQFE postgresql/libpq-fe.h REQUIRED)
    set(LIBPQFE "${LIBPQFE}/postgresql")
  endif(NOT LIBPQFE)
endif(WIN32)
include_directories(${LIBPQXX_SOURCE_DIR}/include ${LIBPQFE})

CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} lo_tell "" PQXX_HAVE_LO_TELL)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQcancel "" PQXX_HAVE_PQCANCEL)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQclientEncoding "" PQXX_HAVE_PQCLIENTENCODING)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQdescribePortal "" PQXX_HAVE_PQDESCRIBEPORTAL)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQencryptPassword "" PQXX_HAVE_PQENCRYPTPASSWORD)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQescapeBytea "" PQXX_HAVE_PQESCAPEBYTEA)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQescapeByteaConn "" PQXX_HAVE_PQESCAPEBYTEACONN)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQescapeString "" PQXX_HAVE_PQESCAPESTRING)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQescapeStringConn "" PQXX_HAVE_PQESCAPESTRINGCONN)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQexecParams "" PQXX_HAVE_PQEXECPARAMS)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQexecPrepared "" PQXX_HAVE_PQEXECPREPARED)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQfreemem "" PQXX_HAVE_PQFREEMEM)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQfreeNotify "" PQXX_HAVE_PQFREENOTIFY)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQftable "" PQXX_HAVE_PQFTABLE)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQftablecol "" PQXX_HAVE_PQFTABLECOL)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQisthreadsafe "" PQXX_HAVE_PQISTHREADSAFE)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQmblen "" PQXX_HAVE_PQMBLEN)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQprepare "" PQXX_HAVE_PQPREPARE)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQprotocolVersion "" PQXX_HAVE_PQPROTOCOLVERSION)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQputCopyData "" PQXX_HAVE_PQPUTCOPY)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQresultErrorField "" PQXX_HAVE_PQRESULTERRORFIELD)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQserverVersion "" PQXX_HAVE_PQSERVERVERSION)
CHECK_LIBRARY_EXISTS(${HAVE_LIBPQ} PQunescapeBytea "" PQXX_HAVE_PQUNESCAPEBYTEA)

#/* Define if PQunescapeBytea() supports hex escape format */
#undef PQXX_HAVE_PQUNESCAPEBYTEA_9