
#if(NOT PQXX_PACKAGE_VERSION)
	set(path_name ${${PROJECT_NAME}_SOURCE_DIR})
	if(EXISTS "${path_name}/configure.ac")
			message(STATUS "GET INFO from ${path_name}/configure.ac")
			file(STRINGS "${path_name}/configure.ac" pqxx_VER_STRING_AUX REGEX "^AC_INIT+")
			string(REGEX MATCHALL "([(]+[A-Za-z]+)|(\\[(.+)\\])|(([0-9]+)\\.([0-9]+)\\.([0-9]+))" RESULTA ${pqxx_VER_STRING_AUX})
			list(GET RESULTA 0 PQXX_PACKAGE)
			string(REGEX REPLACE "[^A-Za-z]+" "" PQXX_PACKAGE ${PQXX_PACKAGE}) # Получаем имя пакета
			list(GET RESULTA 1 PQXX_PACKAGE_VERSION) # получаем версию пакета
			string(REGEX MATCHALL "[0-9]" PQXX_PACKAGE_VERSION ${PQXX_PACKAGE_VERSION})
			list(GET RESULTA 2 PQXX_PACKAGE_BUGREPORT) # получаем адрес багрепорта 
			string(REPLACE "[" "" PQXX_PACKAGE_BUGREPORT ${PQXX_PACKAGE_BUGREPORT})
			string(REPLACE "]" "" PQXX_PACKAGE_BUGREPORT ${PQXX_PACKAGE_BUGREPORT})
			file(STRINGS "${path_name}/configure.ac" pqxx_VER_STRING_AUX REGEX "^PQXX_ABI+")
			string(REGEX MATCH "[0-9.]+" PQXX_ABI ${pqxx_VER_STRING_AUX})
	else()
		set(PQXX_PACKAGE "libpqxx")
		set(PQXX_PACKAGE_BUGREPORT "Jeroen T. Vermeulen <jtv@xs4all.nl>")
		if(EXISTS ${path_name}/include/pqxx/version.hxx)
			message(STATUS "GET INFO from ${path_name}/include/pqxx/version.hxx")
			file(STRINGS "${path_name}/include/pqxx/version.hxx" pqxx_VER_STRING_AUX REGEX "PQXX_VERSION +")
			string(REGEX MATCHALL "[0-9]+" PQXX_PACKAGE_VERSION ${pqxx_VER_STRING_AUX})
			file(STRINGS "${path_name}/include/pqxx/version.hxx" pqxx_VER_STRING_AUX REGEX "PQXX_ABI+")
			string(REGEX MATCH "[0-9.]+" PQXX_ABI ${pqxx_VER_STRING_AUX})
		else(EXISTS ${path_name}/include/pqxx/version.hxx)
			set(PQXX_PACKAGE_VERSION 4 0 1 )
			set(PQXX_ABI "4.0")
		endif(EXISTS ${path_name}/include/pqxx/version.hxx)
	endif(EXISTS "${path_name}/configure.ac")
	list(GET PQXX_PACKAGE_VERSION 0 PQXX_MAJOR)
	list(GET PQXX_PACKAGE_VERSION 1 PQXX_MINOR)
	list(GET PQXX_PACKAGE_VERSION 2 PQXX_PATCH)
	set(PQXX_PACKAGE_VERSION "${PQXX_PACKAGE} ${PQXX_MAJOR}.${PQXX_MINOR}")
	set(VERSION ${PQXX_PACKAGE_VERSION})
	set(PQXX_PACKAGE_STRING "${PQXX_MAJOR}.${PQXX_MINOR}" )
	set(PQXX_PACKAGE_TARNAME "${PQXX_PACKAGE}")
	set(PQXX_PACKAGE_URL "")
	set(PACKAGE ${PQXX_PACKAGE})
	set(PACKAGE_NAME ${PQXX_PACKAGE})
	set(PACKAGE_BUGREPORT ${PQXX_PACKAGE_BUGREPORT})
	set(PACKAGE_STRING ${PQXX_PACKAGE_VERSION})
	set(PACKAGE_TARNAME ${PQXX_PACKAGE_TARNAME})
	set(PACKAGE_URL ${PQXX_PACKAGE_URL})
	set(PACKAGE_VERSION ${PQXX_PACKAGE_VERSION})
	message(>>>>>>>>>>PQXX_PACKAGE=${PQXX_PACKAGE}<<<<<<<<<<)
	message(>>>>>>>>>>PQXX_ABI=${PQXX_ABI}<<<<<<<<<<)
	message(>>>>>>>>>>PQXX_PACKAGE_VERSION=${PQXX_PACKAGE_VERSION}<<<<<<<<<<)
	message(>>>>>>>>>>PQXX_PACKAGE_BUGREPORT=${PQXX_PACKAGE_BUGREPORT}<<<<<<<<<<)
	message(>>>>>>>>>>PQXX_PACKAGE_STRING=${PQXX_PACKAGE_STRING}<<<<<<<<<<)
#endif(NOT PQXX_PACKAGE_VERSION)
